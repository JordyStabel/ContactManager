{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","console","log","finish","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","react","contacts_Contact","Header","branding","href","defaultProps","About","match","params","NotFound","Test","title","body","fetch","then","json","_this$state","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classNames","is-invalid form-control form-control-lg","AddContact","errors","event","defineProperty","target","onSubmit","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updatedContact","put","App","context_Provider","layout_Header","Math","floor","random","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc69bcac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        // Will add the contact that was passed along as the payload to the contacts array in the state\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        // Find the contact with the same id as the payload and replace it with the payload contact.\r\n        // Then set it as the state\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await axios.get(\r\n      \"https://jsonplaceholder.typicode.com/users\"\r\n    );\r\n\r\n    this.setState({\r\n      contacts: response.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  // // = () =>, because otherwise the function should\r\n  // // contain: .bind(this) at the end to be able to use 'this' in the function\r\n  // onDeleteClick = () => {\r\n  //   this.props.deleteClickHandler();\r\n  // };\r\n\r\n  render() {\r\n    const { name, email, phone, id } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n// Forcing specific proptypes for each property\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n  //deleteClickHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Fragment, Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  // deleteContact = id => {\r\n  //   const { contacts } = this.state;\r\n\r\n  //   // Create a copy of the 'state contacts' object,\r\n  //   // but filter out the contact where the id ISN'T the given id\r\n  //   const newContacts = contacts.filter(contact => contact.id !== id);\r\n\r\n  //   this.setState({ contacts: newContacts });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  //deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                />\r\n              ))}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n// Will use the default props when there are no other props given\r\nHeader.defaultProps = {\r\n  branding: \"My app\"\r\n};\r\n\r\n// Will force a required proptype\r\nHeader.propTypes = {\r\n  branding: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        {props.match.params.id} About Contact Manager\r\n      </h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404 </span>Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n      <p>Too bad, too sad, you're dead to me, you're sashimi</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n\r\n    console.log(\"componentDidMount\");\r\n  }\r\n\r\n  //   componentWillMount() {\r\n  //     console.log(\"componentWillMount\");\r\n  //   }\r\n\r\n  //   componentDidUpdate() {\r\n  //     console.log(\"componentDidUpdate\");\r\n  //   }\r\n\r\n  //   componentWillUpdate() {\r\n  //     console.log(\"componentWillUpdate\");\r\n  //   }\r\n\r\n  //   componentWillReceiveProps(nextProps, nextState) {\r\n  //     console.log(\"componentWillReceiveProps\");\r\n  //   }\r\n\r\n  //   static getDerivedStateFromProps(nextProps, prevState) {\r\n  //     console.log(\"getDerivedStateFromProps\");\r\n  //     return {\r\n  //       test: \"Something\"\r\n  //     };\r\n  //   }\r\n\r\n  //   getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //     console.log(\"getSnapshotBeforeUpdate\");\r\n  //   }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\n// Create a input text field component that will except dynamic values\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classNames(\"form-control form-control-lg\", {\r\n          \"is-invalid form-control form-control-lg\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Specifing each dynamic property and its type and whether or not is required or not\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  // As long as the 'name' attribute in the html element is written the same as the state,\r\n  // You can pass the event and use that to read out the attribute you want to change along with the value\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, event) => {\r\n    event.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors/empty fields\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    // Along as the name and value are the same, there is no need for this.name = name\r\n    const newContact = {\r\n      //id: uuid(), // Will generate a unique id\r\n      name, // same as => this.name = name\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const response = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: response.data });\r\n\r\n    // Clear the state so fields are cleared after submiting the contact\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    // Re-direct back to home page\r\n    // Technically doesn't re-direct but goes back to a previoulsy loaded page\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add New Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const response = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = response.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n  // As long as the 'name' attribute in the html element is written the same as the state,\r\n  // You can pass the event and use that to read out the attribute you want to change along with the value\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, event) => {\r\n    event.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors/empty fields\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    // Along as the name and value are the same, there is no need for this.name = name\r\n    const updatedContact = {\r\n      //id: uuid(), // Will generate a unique id\r\n      name, // same as => this.name = name\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const response = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updatedContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: response.data });\r\n\r\n    // Clear the state so fields are cleared after submiting the contact\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    // Re-direct back to home page\r\n    // Technically doesn't re-direct but goes back to a previoulsy loaded page\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { Provider } from \"./context\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding={Math.floor(Math.random() * 100)} />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}